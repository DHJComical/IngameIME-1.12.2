name: Build Test Artifact

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build and Test For example
    runs-on: ubuntu-latest

    steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Gather Gradle properties
            uses: madhead/read-java-properties@latest
            id: gradle_properties
            with:
              file: gradle.properties
              all: true

          - name: Grant Execute Permission for gradlew
            run: chmod +x gradlew

          - name: Get current date
            id: date
            run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

          - name: Change mod version
            run: sed -i "s/mod_version.*=.*/mod_version = ${{ steps.date.outputs.date }}/g" gradle.properties

          - name: Setup Java
            uses: actions/setup-java@v3
            with:
              java-version: '21'
              distribution: 'zulu'
              cache: gradle

          - name: Run Tests
            uses: gradle/gradle-build-action@v2
            with:
               arguments: test --info --stacktrace

          - name: Publish Test Report
            uses: actions/upload-artifact@v4
            if: always()
            with:
              name: test-results
              path: build/test-results/test/TEST-*.xml

          - name: Show Test Results in UI
            uses: dorny/test-reporter@v1
            if: always()
            with:
              name: Unit Test Results
              path: build/test-results/test/TEST-*.xml
              reporter: java-junit
              list-tests: 'always'
              fail-on-error: false

          - name: Build
            uses: gradle/gradle-build-action@v2
            with:
              arguments: build --info --stacktrace

          - name: Upload Build Artifacts
            uses: actions/upload-artifact@v4
            with:
              name: ${{ steps.gradle_properties.outputs.mod_id }}-1.12.2-${{ steps.date.outputs.date }}-${{ github.run_number }}
              path: build/libs

          - name: Verify Results
            run:
              if grep -q "FAILED" build/reports/tests/test/index.txt; then
                echo "::error::Unit tests failed!"
                exit 1
              fi