name: Build and Release Minecraft 1.12.2 Forge Mod

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build and Release Forge Mod
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Gather Gradle properties
        uses: madhead/read-java-properties@latest
        id: gradle_properties
        with:
          file: gradle.properties
          all: true

      - name: Get release version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${{ steps.gradle_properties.outputs.mod_version }}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "Release version: ${VERSION}"

      - name: Update mod version for release
        run: |
          sed -i "s|mod_version.*=.*|mod_version = ${{ steps.version.outputs.VERSION }}|g" gradle.properties
          echo "Updated mod_version to: ${{ steps.version.outputs.VERSION }}"

      - name: Grant Execute Permission for gradlew
        run: chmod +x gradlew

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: gradle

      - name: Build
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build --info --stacktrace

      - name: Debug build output
        run: |
          echo "=== Build directory structure ==="
          find . -name "*.jar" -type f 2>/dev/null || echo "No JAR files found anywhere"
          echo ""
          echo "=== Full build directory ==="
          ls -la build/ 2>/dev/null || echo "build/ directory does not exist"
          echo ""
          echo "=== build/libs directory ==="
          ls -la build/libs/ 2>/dev/null || echo "build/libs/ directory does not exist"
          echo ""
          echo "=== Gradle tasks output ==="
          ./gradlew tasks --all | grep -i jar || echo "No jar tasks found"

      - name: Ensure build directory exists and build if needed
        run: |
          if [ ! -d "build/libs" ] || [ -z "$(ls -A build/libs/*.jar 2>/dev/null)" ]; then
            echo "No JAR files found, attempting to build jar task specifically..."
            ./gradlew jar --info --stacktrace
            echo "After jar task:"
            ls -la build/libs/ 2>/dev/null || echo "build/libs/ still does not exist"
          fi

      - name: List built files
        run: |
          echo "Files in build/libs:"
          ls -la build/libs/

      - name: Find built jar files
        id: find_jars
        run: |
          MAIN_JAR=$(find build/libs -name "*.jar" ! -name "*-sources.jar" ! -name "*-dev.jar" ! -name "*-deobf.jar" | head -1)
          SOURCES_JAR=$(find build/libs -name "*-sources.jar" | head -1)
          DEV_JAR=$(find build/libs -name "*-dev.jar" | head -1)
          
          echo "MAIN_JAR=${MAIN_JAR}" >> $GITHUB_OUTPUT
          echo "SOURCES_JAR=${SOURCES_JAR}" >> $GITHUB_OUTPUT
          echo "DEV_JAR=${DEV_JAR}" >> $GITHUB_OUTPUT
          
          echo "Found main jar: ${MAIN_JAR}"
          if [ -f "$SOURCES_JAR" ]; then
            echo "Found sources jar: ${SOURCES_JAR}"
          fi
          if [ -f "$DEV_JAR" ]; then
            echo "Found dev jar: ${DEV_JAR}"
          fi

      - name: Generate checksums
        run: |
          cd build/libs
          for file in *.jar; do
            if [ -f "$file" ]; then
              sha256sum "$file" > "$file.sha256"
              echo "Generated checksum for: $file"
            fi
          done

      - name: Upload Build Artifacts (for workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.gradle_properties.outputs.mod_id }}-1.12.2-${{ steps.version.outputs.VERSION }}-${{ github.run_number }}
          path: build/libs

      - name: Check if files exist before upload
        run: |
          if [ ! -d "build/libs" ] || [ -z "$(ls -A build/libs/*.jar 2>/dev/null)" ]; then
            echo "Error: No JAR files found in build/libs/"
            ls -la build/ || echo "build/ directory does not exist"
            exit 1
          fi
          echo "JAR files found:"
          ls -la build/libs/

      - name: Upload jar files to release
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: build/libs/*.jar
          draft: false
          prerelease: false
          tag_name: ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref_name }}
          name: ${{ steps.gradle_properties.outputs.mod_id }} v${{ steps.version.outputs.VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        permissions:
          contents: write
          actions: read